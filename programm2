#include <stdio.h>
#include <stdlib.h>
#include <string.h>

FILE *file;
int table[1000][1000];
int otvet[100];
int x,y,h,g,kolvo,kotv,i,j;

void tablebuild();
void recognize();
void chekmark();
void otvprint();
void tableshow();

int main(int argc, char *argv[]){
	file = fopen(argv[1], "r");

	tablebuild();
	recognize();
	chekmark();
	otvprint();
}

void tablebuild(){
	char ch[2];
	i = 1;
	y = 1;
	while (!feof(file))
    {
    fgets(ch, 2, file);
    if (ch[0] == '\n')
    {
    y++;
    if (x<i) x=i;
    i=1;
    }

    if (ch[0] == '1' && y>=3)
    {
    table[y-2][i] = 1;
    i++;
    }
    if (ch[0] == '0' && y>=3)
    {
    table[y-2][i] = 0;
    i++;
    }
    ch[0] = 0;
    }
	y=y-3;
	x=x-1;
}

void recognize(){
	for (i=1,j=0;j<2;i++){
    if (table[2][i] == 1) j++;
    if (table[2][i] == 0) h++;
	}
	for (i=1,j=0;j<2;i++){
    if (table[i][2] == 1) j++;
    if (table[i][2] == 0) g++;
	}
	kotv=(x-1)/(h+1);
	kolvo=(y-1)/(g+1);
}

void chekmark(){
	int lvo,otv;
	for (lvo=1;lvo<kolvo+1;lvo++){
    for (otv=1;otv<kotv+1;otv++){
    if ((table[((1+g)/2+1)+(1+g)*(lvo-1)][((1+h)/2+1)+(1+h)*(otv-1)]) == 1) otvet[lvo]=otv;
    }
}
}

void otvprint(){
	for (i=1;i<kolvo+1;i++)
    printf("%d\n",otvet[i]);
}

void tableshow(int y, int x){
	for (i=1;i<y+1;i++){
    for (j=1;j<x+1;j++){
    printf("%d",table[i][j]);
    }
    printf("\n");
	}
}
